###### 设置数据源 ######
spring.datasource.url=jdbc:mysql://rdsbg1u5l9442b54uvfl.mysql.rds.aliyuncs.com/account?autoReconnect=true&useUnicode=true&characterEncoding=utf-8
spring.datasource.username=account
spring.datasource.password=Caonima123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#spring.session.timeout=86400s
server.servlet.session.timeout=86400s

###### 端口 ######
server.port=9081

###### slfl4j配置 ######
#logging.file=D://gitcode//account//logs//account.log
#logging.file=/home/project/account/logs/account.log
#logging.file=/Users/neusoft/Documents/account/logs/account.log
#logging.level.com.buxuesong = debug
#logging.level.cn = debug

###### web配置 ######
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

spring.thymeleaf.cache=false
#页面默认前缀目录
#spring.mvc.view.prefix=/WEB-INF/jsp/
##页面默认后缀目录
#spring.mvc.view.suffix=.jsp



##########################  druid配置   ##########################
# 初始化连接，最小空闲连接， 最大连接数量
spring.datasource.initialSize=1
spring.datasource.minIdle=1
spring.datasource.maxActive=5
#超时等待时间   毫秒为单位
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.removeAbandoned=true
spring.datasource.removeAbandonedTimeout=1800
# 配置一个连接在池中最小生存的时间   毫秒为单位
spring.datasource.minEvictableIdleTimeMillis=300000
#SQL查询,用来验证从连接池取出的连接,在将连接返回给调用者之前.如果指定,则查询必须是一个SQL SELECT并且必须返回至少一行记录
spring.datasource.validationQuery=SELECT 1 FROM DUAL
#指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串
spring.datasource.testWhileIdle=true
#指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个.注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串
spring.datasource.testOnBorrow=false
#指明是否在归还到池中前进行检验注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小 开启池的prepared statement 池功能
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.logAbandoned=true
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters= stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=3000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true

# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=1.117.221.208
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=myRedis
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=5
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=1000